.container {
  display: flex;
  flex-direction: column;
  min-height: 50vh;
  position: relative;
}

.editor {
  padding: var(--spacing-lg);
  min-height: 200px;
  color: var(--color-text-primary);
  font-family: var(--font-family-base);
  font-size: var(--font-size-md);
  line-height: var(--line-height-lg);
  cursor: text;
  position: relative;
  overflow-wrap: break-word;
  white-space: pre-wrap;
  tab-size: 4;
  -webkit-text-size-adjust: 100%;
  -webkit-font-smoothing: antialiased;
}

.editor:focus {
  outline: none;
  box-shadow: 0 0 0 2px var(--color-primary-light);
}

.editor :global(.ProseMirror) {
  outline: none;
  height: 100%;
  min-height: inherit;
  position: relative;
  word-wrap: break-word;
  white-space: pre-wrap;
  -webkit-font-variant-ligatures: none;
  font-variant-ligatures: none;
  font-feature-settings: "liga" 0;
  caret-color: var(--color-primary);
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: text;
  user-select: text;
}

.editor :global(.ProseMirror-focused) {
  outline: none;
}

/* Improve text selection visibility */
.editor :global(.ProseMirror)::selection {
  background: var(--color-primary-light);
}

/* Ensure placeholder text is visible */
.editor :global(.ProseMirror) p.is-empty:first-child::before {
  color: var(--color-text-secondary);
  content: attr(data-placeholder);
  float: left;
  height: 0;
  pointer-events: none;
}

.editor :global(.ProseMirror p) {
  margin: var(--spacing-sm) 0;
}

.editor :global(.ProseMirror h1),
.editor :global(.ProseMirror h2),
.editor :global(.ProseMirror h3),
.editor :global(.ProseMirror h4),
.editor :global(.ProseMirror h5),
.editor :global(.ProseMirror h6) {
  font-family: var(--font-family-heading);
  color: var(--color-text-primary);
  margin: var(--spacing-lg) 0 var(--spacing-sm);
}

.editor :global(.ProseMirror ul),
.editor :global(.ProseMirror ol) {
  padding-left: var(--spacing-xl);
  margin: var(--spacing-sm) 0;
}

.editor :global(.ProseMirror blockquote) {
  border-left: 3px solid var(--color-primary);
  margin: var(--spacing-md) 0;
  padding-left: var(--spacing-md);
  color: var(--color-text-secondary);
}

.editor :global(.ProseMirror a) {
  color: var(--color-primary);
  text-decoration: none;
}

.editor :global(.ProseMirror a:hover) {
  text-decoration: underline;
}

.editor :global(.ProseMirror code) {
  font-family: var(--font-family-monospace);
  background-color: var(--color-gray-100);
  padding: 0.2em 0.4em;
  border-radius: var(--radius-sm);
}